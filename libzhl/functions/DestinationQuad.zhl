struct DestinationQuad depends (Vector) { {{
    void LIBZHL_API DestinationQuad::RotateRadians(const Vector& pivot, float radians) noexcept;

    inline void DestinationQuad::FlipX() noexcept
    {
        std::swap(_topLeft, _topRight);
        std::swap(_bottomLeft, _bottomRight);
    }

    inline void DestinationQuad::FlipY() noexcept
    {
        std::swap(_topLeft, _bottomLeft);
        std::swap(_topRight, _bottomRight);
    }

    inline void RotateDegrees(const Vector& pivot, float degrees) noexcept
    {
        constexpr float DEGREES_TO_RADIANS = 3.14159265358979323846f / 180.0f;
        float radians = degrees * DEGREES_TO_RADIANS;
        RotateRadians(pivot, radians);
    }
}}
    Vector _topLeft : 0x0, _topRight : 0x8, _bottomLeft : 0x10, _bottomRight : 0x18;
} : 0x20;
