"ba(????????)b9????????e8????????83c40c68????????6a00e8????????68????????ba????????b9????????e8????????83c40c68????????6a00e8????????68????????ba????????b9????????e8????????83c40c68????????6a00e8????????68????????ba????????b9????????e8????????83c40c8be5":
reference KAGE_Graphics_VertexAttributeDescriptor g_ColorOffset_VertexAttributes;

"ba(????????)b9????????e8????????83c40c68????????6a00e8????????68????????ba????????b9????????e8????????83c40c68????????6a00e8????????68????????ba????????b9????????e8????????83c40c68????????6a00e8????????68????????ba????????b9????????e8????????83c40c68????????6a00e8????????68????????ba????????b9????????e8????????83c40c68????????6a00e8????????68????????ba????????b9????????e8????????83c40c68????????6a00e8????????68????????ba????????b9????????e8????????83c40c68????????6a00e8????????68????????ba????????b9????????e8????????83c40c8be5":
reference KAGE_Graphics_VertexAttributeDescriptor g_ColorOffset_Champion_VertexAttributes;

struct KAGE_Graphics_GraphicsBuffer {
    void* data : 0x0;
    uint32_t size : 0x4;
    uint32_t capacity : 0x8;
    uint32_t processed: 0xc;
} : 0x10; // (checked)

struct KAGE_Graphics_GraphicsBufferObject {
    KAGE_Graphics_GraphicsBuffer* container : 0x0; // treated as an array of graphic buffers but in reality there is always one
    uint32_t activeBufferIdx : 0x4;
    uint32_t elementSize : 0x8;

    "558bec83e4f851538bd95657837b0800750b33c05f5e5b8be55dc20400":
    void* Allocate(uint32_t n);

    {{
        inline void* GetBase() {
            auto& activeBuffer = this->container[this->activeBufferIdx];
            uintptr_t buffer = (uintptr_t)activeBuffer.data;
            return (void*)(buffer + (this->elementSize * activeBuffer.processed));
        }
    }}
} : 0xC;

struct KAGE_Graphics_RenderBatch depends (KAGE_Graphics_GraphicsBufferObject) {
    KAGE_Graphics_Shader* shader : 0x14;
    KAGE_Graphics_GraphicsBufferObject _vertexBuffer : 0x24;
    KAGE_Graphics_GraphicsBufferObject _indexBuffer : 0x30;
} : 0x3c; // (checked)

struct KAGE_Graphics_VertexAttributeDescriptor {};
